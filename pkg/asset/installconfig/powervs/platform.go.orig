package powervs

import (
	"os"

	"github.com/openshift/installer/pkg/types/powervs"
)

// Platform collects powervs-specific configuration.
func Platform() (*powervs.Platform, error) {
<<<<<<< HEAD
=======
	regions := knownRegions()
	longRegions := make([]string, 0, len(regions))
	shortRegions := make([]string, 0, len(regions))
	for id, location := range regions {
		longRegions = append(longRegions, fmt.Sprintf("%s (%s)", id, location))
		shortRegions = append(shortRegions, id)
	}

	var regionTransform survey.Transformer = func(ans interface{}) interface{} {
		switch v := ans.(type) {
		case core.OptionAnswer:
			return core.OptionAnswer{Value: strings.SplitN(v.Value, " ", 2)[0], Index: v.Index}
		case string:
			return strings.SplitN(v, " ", 2)[0]
		}
		return ""
	}
>>>>>>> 436f82504 (removing hardcoded vars)

	ssn, err := GetSession()
	if err != nil {
		return nil, err
	}

	var p powervs.Platform
	if osOverride := os.Getenv("OPENSHIFT_INSTALL_OS_IMAGE_OVERRIDE"); len(osOverride) != 0 {
		p.BootstrapOSImage = osOverride
		p.ClusterOSImage = osOverride
	}

	p.Region = ssn.Session.Region
	p.Zone = ssn.Session.Zone
	p.APIKey = ssn.Session.IAMToken
	p.UserID = ssn.Session.UserAccount

	return &p, nil
}
